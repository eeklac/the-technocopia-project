# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SerialSelect.ui'
#
# Created: Sun Apr 21 14:13:46 2013
#      by: PyQt4 UI code generator 4.9.3
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui
from os import *
import FreeCAD, Part 
import sys
import os
import time
import pexpect
BAUDRATE = '1'
EXTRUDER_HEAT = '185'
DIAMETER = '3'
#sys.path.append('src/NeuronRobotics/SERIAL_GUI/Printrun')
#import printcore
#from printcore import printcore

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    _fromUtf8 = lambda s: s

class Ui_Dialog(object):
    def setupUi(self, Dialog):
	
	Dialog.setObjectName(_fromUtf8("Dialog"))
        Dialog.resize(294, 460)

        self.DEVICE_CBOX = QtGui.QComboBox(Dialog)
        self.DEVICE_CBOX.setGeometry(QtCore.QRect(40, 160, 201, 31))
        self.DEVICE_CBOX.setObjectName(_fromUtf8("DEVICE_CBOX"))

        self.MainLogo = QtGui.QLabel(Dialog)
        self.MainLogo.setGeometry(QtCore.QRect(90, 0, 111, 121))
        self.MainLogo.setText(_fromUtf8(""))
        self.MainLogo.setPixmap(QtGui.QPixmap(_fromUtf8(":/me/test/hat.png")))
        self.MainLogo.setObjectName(_fromUtf8("MainLogo"))

        self.SEND_PBUTTON = QtGui.QPushButton(Dialog)
        self.SEND_PBUTTON.setGeometry(QtCore.QRect(160, 400, 87, 27))
        self.SEND_PBUTTON.setObjectName(_fromUtf8("SEND_PBUTTON"))

        self.DEVICE_LABEL = QtGui.QLabel(Dialog)
        self.DEVICE_LABEL.setGeometry(QtCore.QRect(40, 130, 201, 20))
        self.DEVICE_LABEL.setObjectName(_fromUtf8("DEVICE_LABEL"))

        self.CANCEL_PBUTTON = QtGui.QPushButton(Dialog)
        self.CANCEL_PBUTTON.setGeometry(QtCore.QRect(30, 400, 87, 27))
        self.CANCEL_PBUTTON.setObjectName(_fromUtf8("CANCEL_PBUTTON"))

        self.MATERIAL_CBOX = QtGui.QComboBox(Dialog)
        self.MATERIAL_CBOX.setGeometry(QtCore.QRect(40, 290, 201, 31))
        self.MATERIAL_CBOX.setObjectName(_fromUtf8("MATERIAL_CBOX"))

        self.MATERIAL_LABEL = QtGui.QLabel(Dialog)
        self.MATERIAL_LABEL.setGeometry(QtCore.QRect(40, 270, 201, 20))
        self.MATERIAL_LABEL.setObjectName(_fromUtf8("MATERIAL_LABEL"))

        self.FILAMENT_LABEL = QtGui.QLabel(Dialog)
        self.FILAMENT_LABEL.setGeometry(QtCore.QRect(40, 330, 201, 20))
        self.FILAMENT_LABEL.setObjectName(_fromUtf8("FILAMENT_LABEL"))

        self.FILAMENT_CBOX = QtGui.QComboBox(Dialog)
        self.FILAMENT_CBOX.setGeometry(QtCore.QRect(40, 350, 201, 31))
        self.FILAMENT_CBOX.setObjectName(_fromUtf8("FILAMENT_CBOX"))

        self.BAUD_LABEL = QtGui.QLabel(Dialog)
        self.BAUD_LABEL.setGeometry(QtCore.QRect(40, 200, 201, 20))
        self.BAUD_LABEL.setObjectName(_fromUtf8("BAUD_LABEL"))

        self.BAUD_CBOX = QtGui.QComboBox(Dialog)
        self.BAUD_CBOX.setGeometry(QtCore.QRect(40, 230, 201, 31))
        self.BAUD_CBOX.setObjectName(_fromUtf8("BAUD_CBOX"))


##############################################
######## Device addition code   ##############
##############################################
	try:
		import re
		import subprocess
		device_re = re.compile("Bus\s+(?P<bus>\d+)\s+Device\s+(?P<device>\d+).+ID\s(?P<id>\w+:\w+)\s(?P<tag>.+)$", re.I)
		df = subprocess.check_output("ls /dev/ttyACM*", shell=True)
		count = df.count('dev')
		index = 0
		newlist = []
		newlist.append('Select a device')
		while (index < count):
			endindex = df.index('\n')
			newlist.append(df[:endindex])
			df = df[endindex + 1:len(df)]
			index = index + 1
		self.DEVICE_CBOX.addItems(newlist)
	except:
		newlist = []
		newlist.append("No device connected!")
		self.DEVICE_CBOX.addItems(newlist)
################################################
################################################
################################################
	
	MATERIAL_LIST = []
	MATERIAL_LIST.append('PLA')
	MATERIAL_LIST.append('ABS')
	self.MATERIAL_CBOX.addItems(MATERIAL_LIST)

	FILAMENT_LIST = []
	FILAMENT_LIST.append('3mm')
	FILAMENT_LIST.append('1.75mm')
	self.FILAMENT_CBOX.addItems(FILAMENT_LIST)
	
	BAUD_LIST = []
	BAUD_LIST.append('115200')
	BAUD_LIST.append('250000')
	self.BAUD_CBOX.addItems(BAUD_LIST)
	

	self.retranslateUi(Dialog)
#	QtCore.QObject.connect(self.comboBox, QtCore.SIGNAL("currentIndexChanged(int)"), self.onIndexChange)
	QtCore.QObject.connect(self.MATERIAL_CBOX, QtCore.SIGNAL("currentIndexChanged(int)"), self.MATERIAL_CHANGE)
	QtCore.QObject.connect(self.FILAMENT_CBOX, QtCore.SIGNAL("currentIndexChanged(int)"), self.FILAMENT_CHANGE)
	QtCore.QObject.connect(self.BAUD_CBOX, QtCore.SIGNAL("currentIndexChanged(int)"), self.BAUD_CHANGE)
	self.SEND_PBUTTON.clicked.connect(self.pushButton_clicked)
	QtCore.QObject.connect(self.CANCEL_PBUTTON, QtCore.SIGNAL(_fromUtf8("clicked()")), Dialog.close)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        

    def retranslateUi(self, Dialog):
        Dialog.setWindowTitle(QtGui.QApplication.translate("Dialog", "Serial Port Selection", None, QtGui.QApplication.UnicodeUTF8))
	self.SEND_PBUTTON.setText("Send!")
        self.DEVICE_LABEL.setText("Device:")
        self.CANCEL_PBUTTON.setText("Cancel")
        self.MATERIAL_LABEL.setText("Material:")
        self.FILAMENT_LABEL.setText("Filament:")
        self.BAUD_LABEL.setText("Baudrate:")

    def BAUD_CHANGE(self):
	BAUD_INDEX = self.BAUD_CBOX.currentIndex()
	if BAUD_INDEX == 1:
		BAUDRATE = '1'
	elif BAUD_INDEX == 2:
		BAUDRATE = '2'

    def MATERIAL_CHANGE(self):
	MATERIAL_INDEX = self.MATERIAL_CBOX.currentIndex()
	if MATERIAL_INDEX == 1:
		EXTRUDER_HEAT = '185'
	elif MATERIAL_INDEX ==2:
		EXTRUDER_HEAT = '230'

    def FILAMENT_CHANGE(self): 	

	FILAMENT_INDEX = self.FILAMENT_CBOX.currentIndex()
	if FILAMENT_INDEX == 1:
		DIAMETER = '3'
	elif FILAMENT_INDEX == 2:
		DIAMETER = '1.75'
	
    def pushButton_clicked(self):	

    	slice_it = './src/NeuronRobotics/Slic3r/slic3r.pl --load src/NeuronRobotics/Slic3r/default.ini --filament-diameter '
	slice_it += DIAMETER
	slice_it += ' --temperature '
	slice_it += EXTRUDER_HEAT
	slice_it += ' src/temp.stl'
	os.system(slice_it)


	command = 'python src/NeuronRobotics/SERIAL_GUI/Printrun/printcore_'
	command += BAUD
	command += '.py src/temp.gcode'
	os.system(command)

import rsrc_rc

class plane():
    d = QtGui.QWidget()
    d.ui = Ui_Dialog()
    d.ui.setupUi(d)
    d.show()
